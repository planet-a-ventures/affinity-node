/**
 * Affinity API v2
 * # Introduction  Welcome to Affinity API v2! This API provides a RESTful interface for building internal apps, automated workflows, and other integrations on top of the core data models in Affinity, and for connecting Affinity to the rest of your tech and data stack.  Please note that this new version of the API is not at feature parity with [Affinity API v1](https://api-docs.affinity.co/). We will add to this new version to cover more of v1\'s functionality over time. **This API version is also only available on select Affinity license types.** See [this Help Center article](https://support.affinity.co/hc/en-us/articles/5563700459533-Getting-started-with-the-Affinity-API-FAQs) or contact your Customer Success Manager for more information.  # Getting Started  All Affinity API endpoints use the base URL `https://api.affinity.co`. All v2 endpoint paths start with `/v2`. Requests must be sent over HTTPS.  ## Using These Docs  The first few sections of these docs cover general information on the API. Each subsequent section covers a set of API endpoints.  Each endpoint is documented with its accepted request parameters, expected response shapes, and a sample request and response. Please note that the shape of a given response can vary depending on what \"type\" of object or data is being returned. When this is the case, the response documentation will include a dropdown that can be used to select the \"type\" for which to display the response shape.  ## Authentication  Affinity API v2 uses API keys and **bearer authentication** (this is an important difference from Affinity API v1\'s use of basic authentication).  To generate an API key, navigate to the Settings page in the Affinity web app. You will need the \"Generate an API key\" role-based permission controlled by your Affinity admin to be able to do this. See [this Help Center article](https://support.affinity.co/hc/en-us/articles/360032633992-How-to-obtain-your-API-Key) for full instructions on API key generation, and [this article](https://support.affinity.co/hc/en-us/articles/360015976732-Account-Level-Permissions) for more information on role-based permissions in Affinity.  Currently, we support one API key per user in your Affinity account. Your API key is able to read data and perform actions in Affinity on your behalf, so keep it safe as you would a password.  Provide your API key as your bearer authentication token to start making calls to Affinity API v2.  ## Permissions  ### Overall requirements  You must have the \"Generate an API key\" permission to be able to work with the Affinity API. Most users in most Affinity accounts with API access have this by default — Contact your Affinity admin if you are not able to generate an API key, and see [this article](https://support.affinity.co/hc/en-us/articles/360015976732-Account-Level-Permissions) for more information on role-based permissions in Affinity.  ### Resource-level permissions  The Affinity API respects sharing permissions that are set in-product. For example, if a given user does not have access to a list, note, or interaction in-product, they will not be able to see or modify it via API.  ### Endpoint-level permissions  Many API endpoints also require endpoint-specific permissions that map to permissions in-product. These permissions, along with the \"Generate an API key\" permission, are managed by your Affinity admin in the Settings page:  | API v2 Endpoint                                            | Required Permission                  | | ---------------------------------------------------------- | ------------------------------------ | | GET `/v2/companies`                                        | \"Export All Organizations directory\" | | GET `/v2/companies/{id}`                                   | \"Export All Organizations directory\" | | GET `/v2/companies/{id}/list-entries`                      | \"Export data from Lists\"             | | GET `/v2/persons`                                          | \"Export All People directory\"        | | GET `/v2/persons/{id}`                                     | \"Export All People directory\"        | | GET `/v2/persons/{id}/list-entries`                        | \"Export data from Lists\"             | | GET `/v2/opportunities`                                    | \"Export data from Lists\"             | | GET `/v2/opportunities/{id}`                               | \"Export data from Lists\"             | | GET `/v2/lists/{listId}/list-entries`                      | \"Export data from Lists\"             | | GET `/v2/lists/{listId}/saved-views/{viewId}/list-entries` | \"Export data from Lists\"             |  ## Rate Limits  The Affinity API sets a limit on the number of calls that a user can make per minute, and that all the users on an account can make per month. It also sets a reasonable limit on the number of concurrent requests it will support from an account at one time.  Requests to **both** Affinity API versions will count toward the one pool of requests allowed for a user or account. Once a per-minute, monthly, or concurrent rate limit is hit, subsequent requests will return an error code of 429. **We highly recommend designing your application to handle 429 errors.**  ### Per-Minute Limits (User-Level)  To help protect our systems, API requests will be halted at **900 per user, per minute.** We may also lower this limit on a temporary basis to manage API availability.  ### Concurrent Request Limits (Account-Level)  To protect our systems and manage availability across customers, we set a reasonable limit on concurrent requests at the account level. Customers should not expect to hit this limit unless they are hitting the API with heavy operations from many concurrent threads at once.  ### Monthly Plan Tier Limits (Account-Level)  The overall number of requests you can make per month will depend on your account\'s plan tier. **This monthly account-level limit resets at the end of each calendar month.** Current rate limits by plan tier are:  | Plan Tier  | Calls Per Month | | ---------- | --------------- | | Essentials | None            | | Scale      | 100k            | | Advanced   | 100k            | | Enterprise | Unlimited\\*     |  \\*Per-Minute and Concurrent Request Limits still apply.  ### Rate Limit Headers  All API calls will return the following response headers with information about per-minute and monthly limits:  | Header                           | Description                                             | | -------------------------------- | ------------------------------------------------------- | | X-Ratelimit-Limit-User           | Number of requests allowed per minute for the user      | | X-Ratelimit-Limit-User-Remaining | Number of requests remaining for the user               | | X-Ratelimit-Limit-User-Reset     | Time in seconds before the limit resets for the user    | | X-Ratelimit-Limit-Org            | Number of requests allowed per month for the account    | | X-Ratelimit-Limit-Org-Remaining  | Number of requests remaining for the account            | | X-Ratelimit-Limit-Org-Reset      | Time in seconds before the limit resets for the account |  ## Pagination  When an endpoint is expected to return multiple results, we break the results up into pages to make them easier to handle. To cycle forward through multiple pages of data, look for the `nextUrl` property in the `pagination` portion of an API response, and use it for your next request. See endpoint documentation for more information.  ## Error Codes  Here is a list of the error codes this API will generally return if something goes wrong (see endpoint documentation for endpoint-specific error information):  | Error Code | Meaning                                                                                                                                                                                                     | | ---------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | 400        | Bad Request — See endpoint documentation for more information.                                                                                                                                              | | 401        | Unauthorized — Your API key is invalid.                                                                                                                                                                     | | 403        | Forbidden — Insufficient rights to a resource.                                                                                                                                                              | | 404        | Not Found — Requested resource does not exist. See endpoint documentation for more information.                                                                                                             | | 405        | Method Not Allowed — The method being used is not supported for this resource.                                                                                                                              | | 422        | Unprocessable Entity — Malformed parameters supplied. This can also happen in cases the parameters supplied logically cannot complete the request. In this case, an appropriate error message is delivered. | | 429        | Too Many Requests — You have exceeded the rate limit.                                                                                                                                                       | | 500        | Internal Server Error — We had a problem with our server. Try again later.                                                                                                                                  | | 503        | Service Unavailable — This shouldn\'t generally happen. Contact us if you encounter this error.                                                                                                              |  # Data Model  ## The Basics  - The three top-level objects in Affinity are **Persons, Companies, and Opportunities**. (Please   note: Companies are called Organizations in the Affinity web app.) These have profiles in the   Affinity web app and can be added to Lists. - A lot of the work of Affinity happens within Lists. A **List** is a spreadsheet-like collection of   rows tied to Persons, Companies, or Opportunities. - Each row on a List is a **List Entry**. A List Entry contains data and metadata about a given   Person, Company, or Opportunity in the context of a List. This includes list-specific field data,   and information about who added the row to the List and when.   - Do note that a given entity can be added to a List more than once, i.e., it can have multiple     List Entries on the same List. These List Entries can have different list-specific field data     and List Entry-level metadata. - Each column on a List maps to a **Field**. Fields and field data also show up within Affinity   profile pages, extensions, and integrations.   - Some Fields are scoped to a single List — These are **list-specific fields**, and in the API,     their data can only be accessed through the List Entry resource. \"Global\" data from other Fields     can be accessed both through the Person/Company/Opportunity resource and the List Entry     resource.  ## Working with Field Data  ### Field Types and IDs  There are a few types of Fields in Affinity, differentiated by the scope and source of their data:  | Field&nbsp;Type             | Description                                                                                                                                                  | Example Fields                                                                                                                                              | Field ID Pattern                                                                                                                             | | --------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- | | `enriched`                  | Firmographic, funding, and people Fields populated by Affinity. These can be \"Affinity Data\" Fields or come from distinct data partners.                     | \"Affinity Data: Description\", \"Dealroom: Number of Employees\"                                                                                               | A string representing the enrichment source, followed by the field name, e.g. `affinity-data-description` or `dealroom-number-of-employees`. | | `list`                      | Fields that are specific to the context of a given list. These can only be accessed through `*_/list-entries` endpoints in this version of the API.           | Default \"Status\" and \"Amount\" columns, custom columns that pertain to a given List of deals or founders                                                     | `field-`, followed by a unique integer, e.g. `field-1234`                                                                                    | | `global`                    | Fields that persist across an Affinity account and are not list-specific.                                                                                    | \"My Firm\'s Founder Scoring Column\"                                                                                                                          | `field-`, followed by a unique integer, e.g. `field-1234`                                                                                    | | `relationship-intelligence` | Fields populated by Affinity from users\' email and calendar data that provide insight into your firm\'s relationship with a given Person/Company/Opportunity. | \"Source of Introduction\", \"First Email\", \"Last Email\", \"First Event\", \"Last Event\", \"Next Event\", \"First Chat Message\", \"Last Chat Message\", \"Last Contact\" | A string similar to the field\'s name in-product, e.g. `source-of-introduction`                                                               |  ### Field Value Types  Field data can take a variety of shapes. These value types are described in the Affinity Help Center [here](https://support.affinity.co/hc/en-us/articles/115001608232-How-to-create-a-new-column-in-a-list). Here is a list of the same value types, as represented in this API. Notice how array types end with `-multi`:  | Single Type         | Array Type                | | ------------------- | ------------------------- | | `text`              | Not supported in Affinity | | `number`            | `number-multi`            | | `datetime`          | Not supported in Affinity | | `location`          | `location-multi`          | | `dropdown`          | `dropdown-multi`          | | `ranked-dropdown`   | Not supported in Affinity | | `person`            | `person-multi`            | | `company`           | `company-multi`           | | `filterable-text`\\* | `filterable-text-multi`\\* |  \\*Please note that `filterable-text` and `filterable-text-multi` are special types that operate similarly to `dropdown` and `dropdown-multi`. They are reserved for Affinity-populated Fields, and users cannot create Fields with these types.  When an array-typed value has no data in it, the API will return `null` (rather than an empty array).  ### Retrieving Field Data  To retrieve field data on companies, persons, or opportunities, call GET `/v2/companies`, GET `/v2/persons`, or one of our GET `*_/list-entries` endpoints. (Note that Opportunities only have list-specific Fields, so all their field data will live on the `*_/list-entries` endpoints.) For most of these endpoints, you will need to specify the Fields for which you want data returned via the `fieldIds` or `fieldTypes` parameter — Otherwise, entities will be returned without any field data attached.  The GET `/v2/companies` and `/v2/persons` endpoints can return entities with enriched, global, and relationship intelligence field data attached, but do not support list-specific field data. **To get comprehensive field data including list-specific field data on Companies and Persons, use the GET `*_/list-entries` endpoints.**  ### Specifying Desired Fields (Field Selection)  As mentioned above, you will need to specify the Fields (either by ID or by Type) for which you want data returned when using the following endpoints:  - GET `/v2/companies` - GET `/v2/companies/{id}` - GET `/v2/persons` - GET `/v2/persons/{id}` - GET `/v2/lists/{listId}/list-entries`  Each of these endpoints has a `fieldIds` parameter that accepts an array of Field IDs, and a `fieldTypes` parameter that accepts an array of Field Types. Use the GET `*_/fields` endpoints to get Field IDs, Field Types, and other Field-level metadata:  - Call GET `/v2/companies/fields` and `/v2/persons/fields` to get a list of the enriched, global,   and relationship intelligence (AKA non-list-specific) Fields that exist on Companies and Persons,   respectively. These are the Fields whose values are available to pull via GET `/v2/companies`, GET   `/v2/companies/{id}`, GET `/v2/persons`, and `/v2/persons/{id}`.  - Call GET `/v2/lists/{listId}/fields` to get a list of the enriched, global, relationship   intelligence, **and list-specific** Fields for a given List. These are the Fields whose values are   available to pull via GET `/v2/lists/{listId}/list-entries`.  The following endpoints don\'t require field selection:  - GET `/v2/lists/{listId}/saved-views/{viewId}/list-entries` — See below. This endpoint returns just   the field data that has been pulled into the given Saved View via UI. - GET `/v2/companies/{id}/list-entries` and GET `/v2/persons/{id}/list-entries` — These endpoints   return comprehensive field data for the given person or company in the context of each List Entry. ### Saved Views  A Saved View allows a user to configure the Fields they want to see in the UI for a given List, and set filters and sorts on the rows on that List. A List can have multiple Saved Views. In the context of this API, Saved Views can be useful for specifying the exact Fields for which data is needed. The `*_/saved-views/{viewId}/list-entries` endpoint also respects the filters that have been set on the given Saved View in the Affinity web app. (It does not, however, respect sorts just yet.)  ### Partner Data Restrictions  This API supports pulling data from [Affinity Data](https://support.affinity.co/hc/en-us/articles/360058255052-Affinity-Data) fields and select [Dealroom fields](https://support.affinity.co/hc/en-us/articles/6106558518797-Dealroom-co-data-in-Affinity#h_01G2N22SVH7TJR3DJV3NQDE9HQ). Due the agreements we have with some of our data partners, the API does not expose data from the following sources:  - Crunchbase, including Crunchbase UUID - Pitchbook - [Dealroom \"exclusive\" fields](https://support.affinity.co/hc/en-us/articles/6106558518797-Dealroom-co-data-in-Affinity#h_01G2N22YEAZJ5TC1X9ENKZFWF5)  ## A Note on Nested Associations  Some GET endpoints return \"association\" data under `fields`. For example, the Persons GET endpoints return data about which Companies a Person is associated with in Affinity. The Opportunities GET endpoints return similar data about associated Companies and Persons. The List Entries GET endpoints also return this data for Person and Opportunity List Entries.  The API truncates these nested arrays of Persons or Companies **at 100 entries**. For example, if an Opportunity is associated with 200 Persons in Affinity, only 100 of those Persons will be returned by the GET `/opportunities` or `/opportunities/{id}` endpoint.  # User Guides  ## A Tour of Our GET Endpoints  | Desired Data                                                | Relevant Endpoints                                                                                                                                                                                                                                                                                                                                    | Notes                                                                                     | | ----------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- | | Company/Person/Opportunity rows from a List                 | Grab the List’s ID from its URL in the Affinity web app, then hit GET `/v2/lists/{listId}/list-entries`                                                                                                                                                                                                                                               | Data returned will be restricted to the rows on the requested List                        | | Company/Person/Opportunity rows from a Saved View           | In the Affinity web app, navigate to a List and [create a Saved View](https://support.affinity.co/hc/en-us/articles/115001508572-How-to-leverage-saved-views-within-a-list) with the desired field data and filters on it. Grab the List and Saved View IDs from the web app URL, then hit GET `/v2/lists/{listId}/saved-views/{viewId}/list-entries` | Data returned will be restricted to the rows and columns on the requested Saved View      | | Full rolodex of Companies or Persons in Affinity            | GET `/v2/companies`, GET `/v2/persons`                                                                                                                                                                                                                                                                                                                | Data from list-specific Fields will not be returned                                       | | All the rows for a given Company or Person across all Lists | GET `/v2/companies/{id}/list-entries`, GET `/v2/persons/{id}/list-entries`                                                                                                                                                                                                                                                                            |                                                                                           | | Metadata on Fields, including Field IDs                     | GET `/v2/companies/fields`, GET `/v2/persons/fields`, GET `/v2/lists/{listId}/fields`                                                                                                                                                                                                                                                                 | Metadata on list-specific Fields will only be returned by GET `/v2/lists/{listId}/fields` | | Metadata on Lists or Saved Views                            | GET `/v2/lists`, GET `/v2/lists/{listId}/saved-views`                                                                                                                                                                                                                                                                                                 |                                                                                           | | Opportunity data                                            | GET `/v2/opportunities` will only return Opportunity names and List IDs. For comprehensive Opportunity data, hit GET `/v2/lists/{listId}/list-entries` for an Opportunity List                                                                                                                                                                        |                                                                                           |  Tip: The ID for a List, Saved View, Person, Company, or Opportunity can always be found in its Affinity web app URL.  # Changelog ## September 25th, 2024  - Upgrade schema to Openapi 3.1  ## August 5, 2024  - Correct `opp` to `opportunity` to match documentation for the `List` `type` property.  ## July 24, 2024  - More accurate documentation for response properties that are enums — Enums with `null` as a   possible value will have it listed as one.  ## March 25, 2024  - Added the ability to retrieve the date and other details of your firm\'s \"First Email\", \"Last   Email\", \"First Event\", \"Last Event\", \"Next Event\", \"First Chat Message\", \"Last Chat Message\", and   \"Last Contact\" with a given entity. Use these timestamps to add relationship context to your   applications, and to identify founders and companies that need investors\' attention. - Endpoints that previously required a `fieldIds` parameter to return field data, now accept either   `fieldIds` or `fieldTypes`, and will return field data accordingly. See the   [Specifying Desired Fields (Field Selection)](#section/Data-Model/Working-with-Field-Data) section   of these docs for more information. The new `fieldTypes` parameter should make field data   retrieval easier for users looking to pull data from many similar Fields at a time.  ## January 4, 2023  - Most endpoints that return field data now require the user to use the `fieldIds` parameter to   specify which Fields they want data for. Without `fieldIds` specified, these endpoints will return   basic entity data but not field data.  ## December 12, 2023  - Added the ability to retrieve metadata (e.g. ID, name, type, enrichment source, and data type) on   Fields. See the [Retrieving Field Metadata](#section/Data-Model/Working-with-Field-Data) section   of these docs for more information. 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@affinity.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Company } from '../models/Company.ts';
import { HttpFile } from '../http/http.ts';

export class CompanyListEntry {
    /**
    * The list entry\'s unique identifier
    */
    'id': number;
    /**
    * The entity type for this list entry
    */
    'type': string;
    /**
    * The date that the list entry was created
    */
    'createdAt': Date;
    /**
    * The ID of the user that created this list entry
    */
    'creatorId': number | null;
    'entity': Company;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "creatorId",
            "baseName": "creatorId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "entity",
            "baseName": "entity",
            "type": "Company",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CompanyListEntry.attributeTypeMap;
    }

    public constructor() {
    }
}
